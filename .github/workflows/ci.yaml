name: Continuous Integration

on:
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  compile_and_test:
    name: Compile & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    services:
        postgres: 
            image: postgres
            env:
                POSTGRES_PASSWORD: mypassword
                POSTGRES_DB: tycho_indexer_0
                POSTGRES_USER: postgres
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
            ports:
                - 5432:5432
    env:
        DATABASE_URL: postgres://postgres:mypassword@localhost:5432/tycho_indexer_0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install diesel cli
        uses: baptiste0928/cargo-install@v2
        with:
          crate: diesel_cli
          features: postgres
      - name: DB Setup
        run: diesel migration run
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Test 
        run: cargo nextest run --workspace --all-targets --all-features

  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - run: cargo +nightly clippy --workspace --all-targets --all-features
        env:
          RUSTFLAGS: -Dwarnings

      - run: cargo +nightly fmt --all --check
